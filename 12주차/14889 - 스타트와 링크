#include <iostream>
#include <vector>
#include <algorithm>
#include <string>
#include <queue>
#include <stack>
#include <cmath>
#include <map>
#include <climits>

using namespace std;

int arr[21][21] = { 0, };
bool team[21] = { false, };
int n;
int MAX = INT_MAX;

void dfs(int cnt, int next) {
    if (cnt == n / 2) {
        // 능력치 최솟값 구하는 로직
        int starts = 0;
        int links = 0;

        for (int i = 1; i <= n; i++) {
            for (int j = 1; j <= n; j++) {
                if (team[i] == true && team[j] == true) {
                    starts += arr[i][j];
                }
                if (team[i] == false && team[j] == false) {
                    links += arr[i][j];
                }
            }
        }
        if (MAX > abs(starts - links)) {
            MAX = abs(starts - links);
        }
    }
    else {
        // TLQKF
        for (int i = next; i < n; i++) {
            team[i] = true;
            dfs(cnt + 1, i + 1);
            team[i] = false;
        }
    }
}

int main() {
    ios::sync_with_stdio(false);
    cin.tie(NULL);

    cin >> n;

    for (int i = 1; i <= n; i++) {
        for (int j = 1; j <= n; j++) {
            cin >> arr[i][j];
        }
    }

    dfs(0, 1);
    cout << MAX;

    return 0;
}
