#include <iostream>
#include <vector>
#include <algorithm>
#include <string>
#include <queue>
#include <stack>
#include <cmath>
#include <map>
#include <climits>

using namespace std;

int visited[100001] = { 0, };
vector<int> v[100001];
int arr[100001];

void dfs(int start) {
    visited[start] = 1;
    for (int i = 0; i < v[start].size(); i++) {
        int k = v[start][i];
        if (visited[k] == 0) {
            arr[k] = start;
            dfs(k);
        }
    }
}

int main() {
    ios::sync_with_stdio(false);
    cin.tie(NULL);

    int n, a, b;
    cin >> n;


    for (int i = 0; i < n - 1; i++) {
        cin >> a >> b;
        v[a].push_back(b);
        v[b].push_back(a);
    }
    dfs(1);

    for (int i = 2; i <= n; i++) {
        cout << arr[i] << ' ';
    }
   
    return 0;
}
